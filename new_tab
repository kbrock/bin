#!/usr/bin/env bash

#command to create a new terminal tab with the associated title and command
# e.g.:
#cd ~/projects/plm-website
# new_tab -n 'plm' -p -c
# new_tab -t 'test' -p -c -e '#autospork.rb'
# new_tab -t 'sc' -p -c -e './script/console'
# new_tab -t 'psql' -p -c -e './script/dbconsole'

function silent_osa() {
  osascript -l AppleScript -e "${*:?need osa command}" > /dev/null
}
function term_to_front() {
  silent_osa 'Tell application "Terminal" to activate'
}
function term_cmd() {
  silent_osa 'Tell application "Terminal" to do script with command "'${1:?need terminal command}'" in selected tab of the front window'
}

function finder_pwd() {
  osascript -l AppleScript -e 'tell application "Finder" to return POSIX path of ((folder of the front window) as text)'  
}

function term_key() {
  silent_osa 'tell application "System Events" to tell process "Terminal" to keystroke "'$1'" using command down'
}

function term_title {
  term_cmd "echo -e '\\\033];${1:?need a title}\\\007'"
}

function usage() {
  echo -e "new_tab"
  echo -e "\t-n <title> : new window "
  echo -e "\t-t <title> : new tab"
  echo -e "\t-c         : clear the screen"
  echo -e "\t-d <dir>   : cd"
  echo -e "\t-p         : cd current directory"
  echo -e "\t-f         : cd current finder window"
  echo -e "\t-e <cmd>   : execute command"
  echo -e "\nexample:\nnew_tab -t 'current' -f -e ls"
}

term_to_front
while getopts "hn:t:d:e:fpc" opt ; do
  case $opt in
    h) usage ; exit 1 ;;
    n) term_key 'n' ; term_title "${OPTARG}" ;;
    t) term_key 't' ; term_title "${OPTARG}" ;;
    d) term_cmd "cd ${OPTARG}" ;;
    p) term_cmd "cd '$(pwd)'" ;;
    c) term_key 'k' ;; #term_cmd "clear" ;;
    f) term_cmd "cd '$(finder_pwd)'" ;;
    e) term_cmd "${OPTARG}" ;;
    \?) echo "Invalid option: -$OPTARG" >&2 ;;
  esac
done
