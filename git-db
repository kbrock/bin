#!/usr/bin/env bash

branchname=$(git symbolic-ref -q --short HEAD)
# add database name into your git config file
# so it takes that database name instead of defaulting to the branch 
suffix=${1}

if [[ -z "${suffix}" || "${sufix}" = "-v" ]] ; then
  echo "options: -b to set to branch name, -X to clear"
  echo
  echo "current sufix '$(git config --get branch.$(git branch-name).suffix)'"
  exit
fi

if [[ "${suffix}" = "-X" ]] ; then
  echo "sufix was '$(git config --get branch.$(git branch-name).suffix)'"
  git config --unset-all -- branch.${branchname}.suffix
  echo "sufix now '$(git config --get branch.$(git branch-name).suffix)'"
  exit
fi

if [[ "${suffix}" = "-b" ]] ; then
  suffix="_${branchname}"
elif [[ "${suffix}" != [-_]* ]] ; then
  suffix="_${suffix}"
fi

#prune off plm_development_ if that was entered
suffix=${suffix#*_development}
suffix=${suffix#*_test}
suffix=${suffix//\//_}

#git config branch.${branchname}.database vmdb_development_${suffix}
#git config branch.${branchname}.test vmdb_test_${suffix}

echo "git config branch.${branchname}.suffix ${suffix}"
git config branch.${branchname}.suffix ${suffix}

# <%= `git config branch.$(git symbolic-ref -q --short HEAD).suffix`.chomp)


### this assumes your database.yml configuration looks something like the following
# <% require 'grit' ; r = Grit::Repo.new(Rails.root); branch_name = (r.head && r.head.name)||'master' %>
# development:
#   adapter: postgresql
#   database: <%= r.config["branch.#{branch_name}.database"] || "plm_development_#{branch_name}" %>
#   host: localhost
#   username: postgres
#   password:
#   pool: 8
#   encoding: utf8
# test: &test
#   adapter: postgresql
#   database: <%= r.config["branch.#{branch_name}.test"] || "plm_test_#{branch_name}" %>
#   host: localhost
#   username: postgres
#   password: 
#   min_messages: warning
# cucumber:
#   <<: *test

