#!/usr/bin/env bash

# push current branch (HEAD) to the origin
#alias gpo="git push origin HEAD"
# function doesn't assume origin, uses remote that this branch is tracking
branch_name=`git symbolic-ref --short HEAD` # contents of file .git/HEAD
remote=`git config branch.${branch_name}.remote`
if [[ "${remote}" = "upstream" || "${remote}" = "downstream" ]] ; then
  protected="${remote}"
  remote=""
fi
args="${@-$remote}"

# not tracking a remote
# see if the user specified a remote
if [[ -z "${remote}" ]] ; then
  remotes=`git remote`
  for r in $remotes ; do
    if [[ "$args" =~ "$r" ]] ; then
      remote=$"r"
    fi
  done
  # start tracking this branch
  args="$args -u"
fi
# add remote name to command if there are no args and the remote is not already in there
if [[ ! "$args" =~ "${remote}" ]] ; then
  args="${remote} ${args}"
fi
# don't know the remote, give user feedback / options
if [[ -z "${remote}" ]] ; then
  if [[ -z "${protected}" ]] ; then
    echo "remote not defined"
    echo
    echo "usage: gpo remote_name"
    echo "       " $remotes
    exit 1
  else
    echo
    echo "usage: git push ${protected}"
    echo "       " $remotes
    exit 1
  fi
fi

# this could be HEAD, but using the branch name is more clear
if [[ ! "$args" =~ "$branch_name" ]] ; then
  args="$args ${branch_name}"
fi

echo "git push $args"
git push $args
