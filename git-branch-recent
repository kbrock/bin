#!/bin/bash

if [ $# -gt 0 ] ; then
  pager="head $@"
else
  pager="cat"
fi

headsha=$(git rev-parse HEAD)
git for-each-ref --sort=-committerdate --format='%(refname:short)' refs/heads/ | $pager | while read k; do
  # change color for these via auto

  # maybe: https://gist.github.com/jehiah/1288596

# example:
# $ git branch-status
# dns_check (ahead 1) | (behind 112) origin/master
# master (ahead 2) | (behind 0) origin/master

# git for-each-ref --format="%(refname:short) %(upstream:short)" refs/heads | \
# while read local remote
# do
#     [ -z "$remote" ] && continue
#     git rev-list --left-right ${local}...${remote} -- 2>/dev/null >/tmp/git_upstream_status_delta || continue
#     LEFT_AHEAD=$(grep -c '^<' /tmp/git_upstream_status_delta)
#     RIGHT_AHEAD=$(grep -c '^>' /tmp/git_upstream_status_delta)
#     echo "$local (ahead $LEFT_AHEAD) | (behind $RIGHT_AHEAD) $remote"
# done

# my git prompt code
# if ! $(git diff-files --ignore-submodules --quiet 2> /dev/null) ; then
#   #locally modified
#   git_status=31
# elif ! $(git diff-index --ignore-submodules --cached --quiet HEAD -- 2> /dev/null) ; then
#   #committed, but not pushed
#   git_status=32
# else
#   git_status=36
# fi

  if [[ `git rev-parse $k` = ${headsha} ]] ; then
    c='%x1b[1m'
  elif git diff --quiet ...$k ; then
    c='%x1b[90m'
  else
    #c='%x1b[37m'
    c='%Creset'
  fi

#  echo "k=${k}"
#  git --no-pager log -1 --pretty=format:"%Cgreen%ci %Cblue%cr%x09%C(auto)%D%Creset%n" $k
  git --no-pager log -1 --pretty=format:"${c}%ci %Creset%Cblue%<(15)%cr%Creset%C(auto)%D%Creset%n" $k --
done
