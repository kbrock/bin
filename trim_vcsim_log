#!/usr/bin/env ruby

#require 'term/ansicolor'
#include Term::ANSIColor
# constants
red="\e[31m"
blue="\e[34m"
green="\e[32m"
bold="\e[1m"
magenta="\e[35m"
gray="\e[37m"
reset="\e[0m"

REQUEST ="#{red}#{"=" * 40 } Request  #{"=" * 40}#{reset}"
RESPONSE="#{blue}#{"=" * 40} Response #{"=" * 40}#{reset}"

# color for request or response
req_res=""

ARGF.each do |line|
  if /^Request:/.match?(line)
    puts REQUEST
    req_res = red
    # prune off Request:
    msg = line[8..].chomp
  elsif /^Response:/.match?(line)
    puts RESPONSE
    req_res = blue
    # prune off Response:
    msg = line[9..].chomp.strip
  else
    msg = line.chomp.strip
  end

  if /<\?xml[^?]+\?>$/.match?(msg)
    next
  elsif msg.start_with?('2024')
    msg ="#{gray}#{msg}#{reset}"
  elsif msg.start_with?('export')
    msg ="#{green}#{msg}#{reset}"
  elsif msg.start_with?('<')
    msg.gsub!(/:?soapenv:?/, '')
    # <_this type="" OR <returnval type=""
    msg.gsub!(/( type=")([^"]*)(")/) { "#{$1}#{req_res}#{$2}#{reset}#{$3}" }

    msg.gsub!(/(<Envelope[^>]*>)(<Body>)(<[A-Za-z:]*[^>]*>)(.*)(<\/[A-Za-z:]*[^>]*>)(<\/Body>)(<\/Envelope>)/) { "#{$1}\n#{$2}\n#{green}#{$3}#{reset}\n#{reset}#{$4}#{reset}#{"\n" unless $4.empty?}#{green}#{$5}#{reset}\n#{$6}\n#{$7}" }
    # don't think we have <Message/> but just in case
    msg.gsub!(/(<Envelope[^>]*>)(<Body>)(<[A-Za-z:]*[^>]*\/>)(<\/Body>)(<\/Envelope>)/) { "#{$1}\n#{$2}\n#{green}#{$3}#{reset}\n#{$6}\n#{$7}" }
  else
    # undefined behavior
  end

  puts msg
end
