#!/usr/bin/env ruby

#require 'term/ansicolor'
#include Term::ANSIColor
# constants
red="\e[31m"
blue="\e[34m"
green="\e[32m"
bold="\e[1m"
magenta="\e[35m"
gray="\e[37m"
reset="\e[0m"

REQUEST ="#{red}#{"=" * 40}  Request #{"=" * 40}#{reset}"
RESPONSE="#{blue}#{"=" * 40} Response #{"=" * 40}#{reset}"

ARGF.each do |line|
  if /^Request:/.match?(line)
    msg=REQUEST
  elsif /^Response:/.match?(line)
    msg=RESPONSE
  elsif (md = /</.match(line))
    msg = line.chomp
    msg.gsub!(/:?soapenv:?/, '')
    msg.gsub!(/(<Envelope[^>]*>)(<Body>)(<[A-Za-z:]*[^>]*>)(.*)(<\/[A-Za-z:]*[^>]*>)(<\/Body>)(<\/Envelope>)/) { "#{$1}\n#{$2}\n#{green}#{$3}#{reset}\n#{reset}#{$4}#{reset}#{"\n" unless $4.empty?}#{green}#{$5}#{reset}\n#{$6}\n#{$7}" }
    # don't think we have <Message/> but just in case
    msg.gsub!(/(<Envelope[^>]*>)(<Body>)(<[A-Za-z:]*[^>]*\/>)(<\/Body>)(<\/Envelope>)/) { "#{$1}\n#{$2}\n#{green}#{$3}#{reset}\n#{$6}\n#{$7}" }
  else
    msg = line.chomp
  end

  msg ="#{gray}#{msg}#{reset}" if msg =~ /^2024/
  msg ="#{green}#{msg}#{reset}" if msg =~ /^export/

  puts msg
end
